#log
logging.level.root=info
# package级别的日志级别调整
#logging.level.com.example.demo=INFO
# 自定义文件名字
logging.file.name=./log/my.log
#logging.file.=./log/interceptor_log.log
# 日志文件大小
logging.logback.rollingpolicy.max-file-size=10MB
# 保留的日志时间
logging.logback.rollingpolicy.max-history=10
## 修改在控制台输出的日志格式
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %clr(%5p) [%thread] %clr(%logger){cyan} : %msg%n
## 修改输出到文件的日志格式
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger : %msg%n


log4j.rootCategory=info, CONSOLE, info
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Threshold=DEBUG
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss}|%m%n


log4j.appender.info = org.apache.log4j.DailyRollingFileAppender
log4j.appender.info.File=./info.log
log4j.appender.info.DatePattern='.'yyyy-MM-dd
log4j.appender.info.Threshold=error
log4j.appender.info.layout=org.apache.log4j.PatternLayout
log4j.appender.info.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss}|%m%n
log4j.appender.info.Encoding=UTF-8